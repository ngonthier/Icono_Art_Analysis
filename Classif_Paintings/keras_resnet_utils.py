#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Fri Oct 18 17:19:18 2019

@author: gonthier
"""

def getResNet50layersName():
    liste = ['input_1',
     'conv1_pad',
     'conv1',
     'bn_conv1',
     'activation',
     'pool1_pad',
     'max_pooling2d',
     'res2a_branch2a',
     'bn2a_branch2a',
     'activation_1',
     'res2a_branch2b',
     'bn2a_branch2b',
     'activation_2',
     'res2a_branch2c',
     'res2a_branch1',
     'bn2a_branch2c',
     'bn2a_branch1',
     'add',
     'activation_3',
     'res2b_branch2a',
     'bn2b_branch2a',
     'activation_4',
     'res2b_branch2b',
     'bn2b_branch2b',
     'activation_5',
     'res2b_branch2c',
     'bn2b_branch2c',
     'add_1',
     'activation_6',
     'res2c_branch2a',
     'bn2c_branch2a',
     'activation_7',
     'res2c_branch2b',
     'bn2c_branch2b',
     'activation_8',
     'res2c_branch2c',
     'bn2c_branch2c',
     'add_2',
     'activation_9',
     'res3a_branch2a',
     'bn3a_branch2a',
     'activation_10',
     'res3a_branch2b',
     'bn3a_branch2b',
     'activation_11',
     'res3a_branch2c',
     'res3a_branch1',
     'bn3a_branch2c',
     'bn3a_branch1',
     'add_3',
     'activation_12',
     'res3b_branch2a',
     'bn3b_branch2a',
     'activation_13',
     'res3b_branch2b',
     'bn3b_branch2b',
     'activation_14',
     'res3b_branch2c',
     'bn3b_branch2c',
     'add_4',
     'activation_15',
     'res3c_branch2a',
     'bn3c_branch2a',
     'activation_16',
     'res3c_branch2b',
     'bn3c_branch2b',
     'activation_17',
     'res3c_branch2c',
     'bn3c_branch2c',
     'add_5',
     'activation_18',
     'res3d_branch2a',
     'bn3d_branch2a',
     'activation_19',
     'res3d_branch2b',
     'bn3d_branch2b',
     'activation_20',
     'res3d_branch2c',
     'bn3d_branch2c',
     'add_6',
     'activation_21',
     'res4a_branch2a',
     'bn4a_branch2a',
     'activation_22',
     'res4a_branch2b',
     'bn4a_branch2b',
     'activation_23',
     'res4a_branch2c',
     'res4a_branch1',
     'bn4a_branch2c',
     'bn4a_branch1',
     'add_7',
     'activation_24',
     'res4b_branch2a',
     'bn4b_branch2a',
     'activation_25',
     'res4b_branch2b',
     'bn4b_branch2b',
     'activation_26',
     'res4b_branch2c',
     'bn4b_branch2c',
     'add_8',
     'activation_27',
     'res4c_branch2a',
     'bn4c_branch2a',
     'activation_28',
     'res4c_branch2b',
     'bn4c_branch2b',
     'activation_29',
     'res4c_branch2c',
     'bn4c_branch2c',
     'add_9',
     'activation_30',
     'res4d_branch2a',
     'bn4d_branch2a',
     'activation_31',
     'res4d_branch2b',
     'bn4d_branch2b',
     'activation_32',
     'res4d_branch2c',
     'bn4d_branch2c',
     'add_10',
     'activation_33',
     'res4e_branch2a',
     'bn4e_branch2a',
     'activation_34',
     'res4e_branch2b',
     'bn4e_branch2b',
     'activation_35',
     'res4e_branch2c',
     'bn4e_branch2c',
     'add_11',
     'activation_36',
     'res4f_branch2a',
     'bn4f_branch2a',
     'activation_37',
     'res4f_branch2b',
     'bn4f_branch2b',
     'activation_38',
     'res4f_branch2c',
     'bn4f_branch2c',
     'add_12',
     'activation_39',
     'res5a_branch2a',
     'bn5a_branch2a',
     'activation_40',
     'res5a_branch2b',
     'bn5a_branch2b',
     'activation_41',
     'res5a_branch2c',
     'res5a_branch1',
     'bn5a_branch2c',
     'bn5a_branch1',
     'add_13',
     'activation_42',
     'res5b_branch2a',
     'bn5b_branch2a',
     'activation_43',
     'res5b_branch2b',
     'bn5b_branch2b',
     'activation_44',
     'res5b_branch2c',
     'bn5b_branch2c',
     'add_14',
     'activation_45',
     'res5c_branch2a',
     'bn5c_branch2a',
     'activation_46',
     'res5c_branch2b',
     'bn5c_branch2b',
     'activation_47',
     'res5c_branch2c',
     'bn5c_branch2c',
     'add_15',
     'activation_48',
     'avg_pool',
     'fc1000']
    return(liste)
    
def getBNlayersResNet50():
    liste=['bn_conv1',
     'bn2a_branch2a',
     'bn2a_branch2b',
     'bn2a_branch2c',
     'bn2a_branch1',
     'bn2b_branch2a',
     'bn2b_branch2b',
     'bn2b_branch2c',
     'bn2c_branch2a',
     'bn2c_branch2b',
     'bn2c_branch2c',
     'bn3a_branch2a',
     'bn3a_branch2b',
     'bn3a_branch2c',
     'bn3a_branch1',
     'bn3b_branch2a',
     'bn3b_branch2b',
     'bn3b_branch2c',
     'bn3c_branch2a',
     'bn3c_branch2b',
     'bn3c_branch2c',
     'bn3d_branch2a',
     'bn3d_branch2b',
     'bn3d_branch2c',
     'bn4a_branch2a',
     'bn4a_branch2b',
     'bn4a_branch2c',
     'bn4a_branch1',
     'bn4b_branch2a',
     'bn4b_branch2b',
     'bn4b_branch2c',
     'bn4c_branch2a',
     'bn4c_branch2b',
     'bn4c_branch2c',
     'bn4d_branch2a',
     'bn4d_branch2b',
     'bn4d_branch2c',
     'bn4e_branch2a',
     'bn4e_branch2b',
     'bn4e_branch2c',
     'bn4f_branch2a',
     'bn4f_branch2b',
     'bn4f_branch2c',
     'bn5a_branch2a',
     'bn5a_branch2b',
     'bn5a_branch2c',
     'bn5a_branch1',
     'bn5b_branch2a',
     'bn5b_branch2b',
     'bn5b_branch2c',
     'bn5c_branch2a',
     'bn5c_branch2b',
     'bn5c_branch2c']
    return(liste)
    
def getResNetLayersNumeral(style_layers,num_layers=50):
    if num_layers==50:
        keras_resnet_layers = getResNet50layersName()
    else:
        print('Only Resnet50 is supported')
        raise(NotImplementedError)
    string = ''
    for elt in style_layers:
        string+= str(keras_resnet_layers.index(elt))
    return(string)